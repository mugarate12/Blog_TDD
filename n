[33mtag v1.0.1[m
Tagger: unknown <serjumano17@gmail.com>
Date:   Thu Apr 16 02:33:28 2020 -0300

release do CRUD do post

[33mcommit e2c0c37a3c92d4bd1237fff54210c50a47c7a55b[m[33m ([m[1;36mHEAD -> [m[1;32mrelease/v1.0.1[m[33m, [m[1;33mtag: v1.0.1[m[33m, [m[1;31morigin/release/v1.0.1[m[33m, [m[1;31morigin/feature/post-CRUD[m[33m, [m[1;31morigin/develop[m[33m, [m[1;32mfeature/post-CRUD[m[33m, [m[1;32mdevelop[m[33m)[m
Author: unknown <serjumano17@gmail.com>
Date:   Wed Apr 15 18:56:08 2020 -0300

    list posts with a user

[1mdiff --git a/src/controllers/postController.js b/src/controllers/postController.js[m
[1mindex db333b4..95531fa 100644[m
[1m--- a/src/controllers/postController.js[m
[1m+++ b/src/controllers/postController.js[m
[36m@@ -26,11 +26,22 @@[m [mmodule.exports = {[m
   },[m
 [m
   async index (req, res) {[m
[32m+[m[32m    const userID = req.userID[m
[32m+[m
[32m+[m[32m    const posts = await connection(TABLENAME)[m
[32m+[m[32m      .where({ userIDFK: userID})[m
[32m+[m[32m      .select('*')[m
     [m
[32m+[m[32m    if (!posts) {[m
[32m+[m[32m      res.status(406).json({[m
[32m+[m[32m        error: 'nÃ£o foi possivel encontrar posts deste usuario'[m
[32m+[m[32m      })[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    return res.status(200).json({ posts })[m
   },[m
 [m
   async delete (req, res) {[m
[31m-    const userID = req.userID[m
     const id = req.params.id[m
 [m
     const removedPost = await connection(TABLENAME)[m
[1mdiff --git a/tests/integration/post.spec.js b/tests/integration/post.spec.js[m
[1mindex 1950df9..d9181ad 100644[m
[1m--- a/tests/integration/post.spec.js[m
[1m+++ b/tests/integration/post.spec.js[m
[36m@@ -40,6 +40,14 @@[m [mdescribe('Tests for a post CRUD', () => {[m
     expect(createPost.status).toBe(200)[m
   })[m
 [m
[32m+[m[32m  it('should get posts by user', async () => {[m
[32m+[m[32m    const postByUser = await request(app)[m
[32m+[m[32m      .get('/posts')[m
[32m+[m[32m      .set('Authorization', `bearer ${token}`)[m
[32m+[m
[32m+[m[32m    expect(postByUser.status).toBe(200)[m
[32m+[m[32m  });[m
[32m+[m
   it('should remove a post', async () => {[m
     const removedPost = await request(app)[m
       .delete(`/posts/${createPost.body.id}`)[m
